{"id":"countContext.js","dependencies":[{"name":"/Users/PerrettJ4/Desktop/Code/School of Code/Week09/w9d3_usecontext-workshop-PerrettJ4/package.json","includedInParent":true,"mtime":1632320552506},{"name":"react","loc":{"line":1,"column":59},"parent":"/Users/PerrettJ4/Desktop/Code/School of Code/Week09/w9d3_usecontext-workshop-PerrettJ4/task3/countContext.js","resolved":"/Users/PerrettJ4/Desktop/Code/School of Code/Week09/w9d3_usecontext-workshop-PerrettJ4/node_modules/react/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CountProvider = CountProvider;\nexports.useCountContext = useCountContext;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar CountContext = (0, _react.createContext)(null);\n\nfunction CountProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = (0, _react.useState)(2),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  function increment() {\n    setCount(count + 1);\n  }\n\n  return /*#__PURE__*/_react.default.createElement(CountContext.Provider, {\n    value: [count, increment]\n  }, children);\n}\n\nfunction useCountContext() {\n  return (0, _react.useContext)(CountContext);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":9,"column":0},"source":"countContext.js","original":{"line":1,"column":0}},{"generated":{"line":27,"column":0},"source":"countContext.js","original":{"line":3,"column":0}},{"name":"CountContext","generated":{"line":27,"column":4},"source":"countContext.js","original":{"line":3,"column":6}},{"generated":{"line":27,"column":16},"source":"countContext.js","original":{"line":3,"column":18}},{"generated":{"line":27,"column":19},"source":"countContext.js","original":{"line":3,"column":21}},{"generated":{"line":27,"column":45},"source":"countContext.js","original":{"line":3,"column":35}},{"generated":{"line":27,"column":49},"source":"countContext.js","original":{"line":3,"column":21}},{"generated":{"line":27,"column":50},"source":"countContext.js","original":{"line":3,"column":0}},{"generated":{"line":29,"column":0},"source":"countContext.js","original":{"line":5,"column":7}},{"name":"CountProvider","generated":{"line":29,"column":9},"source":"countContext.js","original":{"line":5,"column":16}},{"generated":{"line":29,"column":22},"source":"countContext.js","original":{"line":5,"column":7}},{"generated":{"line":29,"column":29},"source":"countContext.js","original":{"line":5,"column":44}},{"generated":{"line":30,"column":0},"source":"countContext.js","original":{"line":5,"column":44}},{"name":"children","generated":{"line":30,"column":6},"source":"countContext.js","original":{"line":5,"column":32}},{"generated":{"line":30,"column":14},"source":"countContext.js","original":{"line":5,"column":44}},{"name":"children","generated":{"line":30,"column":22},"source":"countContext.js","original":{"line":5,"column":32}},{"generated":{"line":30,"column":30},"source":"countContext.js","original":{"line":5,"column":44}},{"generated":{"line":32,"column":0},"source":"countContext.js","original":{"line":5,"column":44}},{"generated":{"line":32,"column":18},"source":"countContext.js","original":{"line":6,"column":28}},{"generated":{"line":32,"column":39},"source":"countContext.js","original":{"line":6,"column":37}},{"generated":{"line":32,"column":40},"source":"countContext.js","original":{"line":6,"column":28}},{"generated":{"line":32,"column":41},"source":"countContext.js","original":{"line":5,"column":44}},{"generated":{"line":33,"column":0},"source":"countContext.js","original":{"line":5,"column":44}},{"generated":{"line":34,"column":0},"source":"countContext.js","original":{"line":5,"column":44}},{"name":"count","generated":{"line":34,"column":6},"source":"countContext.js","original":{"line":6,"column":9}},{"generated":{"line":34,"column":11},"source":"countContext.js","original":{"line":5,"column":44}},{"generated":{"line":35,"column":0},"source":"countContext.js","original":{"line":5,"column":44}},{"name":"setCount","generated":{"line":35,"column":6},"source":"countContext.js","original":{"line":6,"column":16}},{"generated":{"line":35,"column":14},"source":"countContext.js","original":{"line":5,"column":44}},{"generated":{"line":37,"column":0},"source":"countContext.js","original":{"line":8,"column":2}},{"name":"increment","generated":{"line":37,"column":11},"source":"countContext.js","original":{"line":8,"column":11}},{"generated":{"line":37,"column":20},"source":"countContext.js","original":{"line":8,"column":2}},{"generated":{"line":37,"column":23},"source":"countContext.js","original":{"line":8,"column":23}},{"name":"setCount","generated":{"line":38,"column":0},"source":"countContext.js","original":{"line":9,"column":4}},{"name":"setCount","generated":{"line":38,"column":4},"source":"countContext.js","original":{"line":9,"column":4}},{"generated":{"line":38,"column":12},"source":"countContext.js","original":{"line":9,"column":12}},{"name":"count","generated":{"line":38,"column":13},"source":"countContext.js","original":{"line":9,"column":13}},{"generated":{"line":38,"column":18},"source":"countContext.js","original":{"line":9,"column":18}},{"generated":{"line":38,"column":21},"source":"countContext.js","original":{"line":9,"column":21}},{"generated":{"line":38,"column":22},"source":"countContext.js","original":{"line":9,"column":12}},{"generated":{"line":38,"column":23},"source":"countContext.js","original":{"line":9,"column":4}},{"generated":{"line":39,"column":0},"source":"countContext.js","original":{"line":10,"column":3}},{"generated":{"line":41,"column":0},"source":"countContext.js","original":{"line":12,"column":2}},{"generated":{"line":41,"column":22},"source":"countContext.js","original":{"line":13,"column":4}},{"generated":{"line":41,"column":51},"source":"countContext.js","original":{"line":13,"column":5}},{"generated":{"line":41,"column":63},"source":"countContext.js","original":{"line":13,"column":4}},{"generated":{"line":41,"column":64},"source":"countContext.js","original":{"line":13,"column":18}},{"generated":{"line":41,"column":72},"source":"countContext.js","original":{"line":13,"column":4}},{"generated":{"line":42,"column":0},"source":"countContext.js","original":{"line":13,"column":27}},{"generated":{"line":42,"column":4},"source":"countContext.js","original":{"line":13,"column":27}},{"generated":{"line":42,"column":9},"source":"countContext.js","original":{"line":13,"column":32}},{"generated":{"line":42,"column":11},"source":"countContext.js","original":{"line":13,"column":34}},{"name":"count","generated":{"line":42,"column":12},"source":"countContext.js","original":{"line":13,"column":35}},{"generated":{"line":42,"column":17},"source":"countContext.js","original":{"line":13,"column":34}},{"name":"increment","generated":{"line":42,"column":19},"source":"countContext.js","original":{"line":13,"column":42}},{"generated":{"line":42,"column":28},"source":"countContext.js","original":{"line":13,"column":34}},{"generated":{"line":43,"column":0},"source":"countContext.js","original":{"line":13,"column":4}},{"name":"children","generated":{"line":43,"column":5},"source":"countContext.js","original":{"line":14,"column":7}},{"generated":{"line":43,"column":13},"source":"countContext.js","original":{"line":13,"column":4}},{"generated":{"line":43,"column":14},"source":"countContext.js","original":{"line":12,"column":2}},{"generated":{"line":44,"column":0},"source":"countContext.js","original":{"line":17,"column":1}},{"generated":{"line":46,"column":0},"source":"countContext.js","original":{"line":19,"column":7}},{"name":"useCountContext","generated":{"line":46,"column":9},"source":"countContext.js","original":{"line":19,"column":16}},{"generated":{"line":46,"column":24},"source":"countContext.js","original":{"line":19,"column":7}},{"generated":{"line":46,"column":27},"source":"countContext.js","original":{"line":19,"column":34}},{"generated":{"line":47,"column":0},"source":"countContext.js","original":{"line":20,"column":2}},{"generated":{"line":47,"column":9},"source":"countContext.js","original":{"line":20,"column":9}},{"name":"CountContext","generated":{"line":47,"column":32},"source":"countContext.js","original":{"line":20,"column":20}},{"generated":{"line":47,"column":44},"source":"countContext.js","original":{"line":20,"column":9}},{"generated":{"line":47,"column":45},"source":"countContext.js","original":{"line":20,"column":2}},{"generated":{"line":48,"column":0},"source":"countContext.js","original":{"line":21,"column":1}}],"sources":{"countContext.js":"import React, { createContext, useContext, useState } from \"react\";\n\nconst CountContext = createContext(null);\n\nexport function CountProvider({ children }) {\n  const [count, setCount] = useState(2);\n\n  function increment() {\n    setCount(count + 1);\n  }\n\n  return (\n    <CountContext.Provider value={[count, increment]}>\n      {children}\n    </CountContext.Provider>\n  );\n}\n\nexport function useCountContext() {\n  return useContext(CountContext);\n}\n"},"lineCount":null}},"error":null,"hash":"7bc72f2d8263b32960f0e352bafd7174","cacheData":{"env":{}}}