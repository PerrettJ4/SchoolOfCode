"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/interactive",{

/***/ "./elementalWords.js":
/*!***************************!*\
  !*** ./elementalWords.js ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"elementalFormsTop2\": function() { return /* binding */ elementalFormsTop2; }\n/* harmony export */ });\n/* harmony import */ var _Users_PerrettJ4_Desktop_Code_School_of_Code_Week09_w9d4_gatsby_next_research_task_nasra_lizard_experimentation_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/toConsumableArray */ \"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var _Users_PerrettJ4_Desktop_Code_School_of_Code_Week09_w9d4_gatsby_next_research_task_nasra_lizard_experimentation_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var _Users_PerrettJ4_Desktop_Code_School_of_Code_Week09_w9d4_gatsby_next_research_task_nasra_lizard_experimentation_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _Users_PerrettJ4_Desktop_Code_School_of_Code_Week09_w9d4_gatsby_next_research_task_nasra_lizard_experimentation_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_Users_PerrettJ4_Desktop_Code_School_of_Code_Week09_w9d4_gatsby_next_research_task_nasra_lizard_experimentation_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2__);\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\n\n\nvar _marked = /*#__PURE__*/_Users_PerrettJ4_Desktop_Code_School_of_Code_Week09_w9d4_gatsby_next_research_task_nasra_lizard_experimentation_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default().mark(findForms);\n\nvar _require = __webpack_require__(/*! ./data */ \"./data.js\"),\n    ELEMENTS = _require.ELEMENTS;\n\nvar word = \"cocopuffs\";\n\nfunction elementalForms(word) {\n  if (word.length === 0) {\n    return [];\n  }\n\n  var keyMap = Object.entries(ELEMENTS).map(function (_ref) {\n    var _ref2 = (0,_Users_PerrettJ4_Desktop_Code_School_of_Code_Week09_w9d4_gatsby_next_research_task_nasra_lizard_experimentation_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__.default)(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    return key.toLowerCase();\n  }); //   if (keyMap.includes(word.toLowerCase())) {\n  //     return [`${ELEMENTS[word[0].toUpperCase() + word.substring(1)]} (${word})`];\n  //   }\n  // split word up into array [b, be, bea, e, ea, eac, a, ac, ach]\n\n  var splitWord = word.toLowerCase().split(\"\");\n  var wordParts = [];\n\n  for (var i = 0; i < splitWord.length; i++) {\n    wordParts.push(splitWord[i]);\n\n    if (i === splitWord.length - 1) {\n      break;\n    }\n\n    wordParts.push(splitWord[i] + splitWord[i + 1]);\n\n    if (i === splitWord.length - 2) {\n      continue;\n    }\n\n    wordParts.push(splitWord[i] + splitWord[i + 1] + splitWord[i + 2]);\n  } //   console.log(keyMap, splitWord);\n  //   console.log(wordParts);\n  // now find the ELEMENTS that fit in our word\n\n\n  var symbols = wordParts.filter(function (symbol) {\n    return keyMap.includes(symbol);\n  }); //   console.log(\"symbols:\", symbols);\n  // put them into object of sub-arrays of what they start with\n\n  alphaArray = {};\n\n  for (charIndex in splitWord) {\n    startsWithArray = [];\n    symbols.forEach(function (symbol) {\n      if (symbol.startsWith(splitWord[charIndex])) {\n        if (charIndex < splitWord.length - 2) {\n          startsWithArray.push(symbol);\n        } else if (charIndex < splitWord.length - 1) {\n          if (symbol.length < 3) {\n            startsWithArray.push(symbol);\n          }\n        } else if (symbol.length === 1) {\n          startsWithArray.push(symbol);\n        } // deal with the two and then deal with the one\n        //\n\n      }\n    });\n    alphaArray[charIndex] = startsWithArray;\n  }\n\n  console.log(alphaArray); //   now create recursion using a while and a random int :)\n\n  var sym = \"\";\n  var concatWord = [];\n  var allConcatWords = [];\n  var totalSymLength = 0;\n  var count = 0;\n\n  while (count < 1000000) {\n    if (typeof sym == \"undefined\") {\n      totalSymLength = 0;\n      concatWord = [];\n      sym = \"\";\n      count++;\n    }\n\n    totalSymLength += sym.length;\n    sym = alphaArray[totalSymLength][Math.floor(Math.random() * alphaArray[totalSymLength].length)];\n    concatWord.push(sym);\n\n    if (concatWord.join(\"\").toString() === word.toLowerCase()) {\n      existCheck = allConcatWords.map(function (array) {\n        return hasSubArray(array, concatWord);\n      });\n\n      if (existCheck.includes(true) === false) {\n        // console.log(\"iteration no:\", count, concatWord);\n        allConcatWords.push(concatWord);\n      }\n\n      totalSymLength = 0;\n      concatWord = [];\n      sym = \"\";\n    } else if (concatWord.join(\"\").length == word.length) {\n      totalSymLength = 0;\n      concatWord = [];\n      sym = \"\";\n      count++;\n    }\n\n    count++;\n  }\n\n  console.log(allConcatWords); //   .includes did not work so this was the painful get around helper function\n\n  function hasSubArray(master, sub) {\n    return sub.every(function (i) {\n      return function (v) {\n        return i = master.indexOf(v, i) + 1;\n      };\n    }(0));\n  } //   putting result into desired format\n\n\n  var result = [];\n\n  for (var _i = 0, _allConcatWords = allConcatWords; _i < _allConcatWords.length; _i++) {\n    subArray = _allConcatWords[_i];\n    subArray = subArray.map(function (item) {\n      return item[0].toUpperCase() + item.substring(1);\n    });\n    subArray = subArray.map(function (item) {\n      return \"\".concat(ELEMENTS[item], \" (\").concat(item, \")\");\n    });\n    result.push(subArray);\n  }\n\n  return result;\n} // console.log(elementalForms(word));\n\n/*TOP SOLUTIONS*/\n\n\nvar elementalFormsTop1 = function elementalFormsTop1(word) {\n  var acc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var result = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n  for (var i = 1; i <= 3; i += 1) {\n    var el = word.slice(0, i).toLowerCase().replace(/^./, function (ch) {\n      return ch.toUpperCase();\n    });\n    if (!ELEMENTS[el]) continue;\n    var line = [].concat((0,_Users_PerrettJ4_Desktop_Code_School_of_Code_Week09_w9d4_gatsby_next_research_task_nasra_lizard_experimentation_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__.default)(acc), [\"\".concat(ELEMENTS[el], \" (\").concat(el, \")\")]);\n    i === word.length && result.push(line);\n    elementalForms(word.slice(i), line, result);\n  }\n\n  console.log(\"hi\");\n  return result;\n};\n\nString.prototype.capitalize = function () {\n  return this.charAt(0).toUpperCase() + this.slice(1).toLowerCase();\n};\n\nfunction findForms(ws) {\n  var form,\n      i,\n      el,\n      _args = arguments;\n  return _Users_PerrettJ4_Desktop_Code_School_of_Code_Week09_w9d4_gatsby_next_research_task_nasra_lizard_experimentation_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default().wrap(function findForms$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          form = _args.length > 1 && _args[1] !== undefined ? _args[1] : [];\n\n          if (!(ws.length == 0)) {\n            _context.next = 4;\n            break;\n          }\n\n          _context.next = 4;\n          return form.map(function (e) {\n            return ELEMENTS[e] + \" (\" + e + \")\";\n          });\n\n        case 4:\n          i = 3;\n\n        case 5:\n          if (!(i > 0)) {\n            _context.next = 15;\n            break;\n          }\n\n          if (!(ws.length >= i)) {\n            _context.next = 12;\n            break;\n          }\n\n          el = ws.slice(0, i).capitalize();\n\n          if (!(el in ELEMENTS)) {\n            _context.next = 12;\n            break;\n          }\n\n          form.push(el);\n          return _context.delegateYield(findForms(ws.slice(i), form), \"t0\", 11);\n\n        case 11:\n          form.pop();\n\n        case 12:\n          --i;\n          _context.next = 5;\n          break;\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction elementalFormsTop2(word) {\n  return word.length == 0 ? [] : Array.from(findForms(word));\n} // console.log(elementalFormsTop2(\"snack\"));\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./elementalWords.js\n");

/***/ })

});