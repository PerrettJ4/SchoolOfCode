/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/interactive";
exports.ids = ["pages/interactive"];
exports.modules = {

/***/ "./data.js":
/*!*****************!*\
  !*** ./data.js ***!
  \*****************/
/***/ ((module) => {

eval("const ELEMENTS = {\n  H: \"Hydrogen\",\n  He: \"Helium\",\n  Li: \"Lithium\",\n  Be: \"Beryllium\",\n  B: \"Boron\",\n  C: \"Carbon\",\n  N: \"Nitrogen\",\n  O: \"Oxygen\",\n  F: \"Fluorine\",\n  Ne: \"Neon\",\n  Na: \"Sodium\",\n  Mg: \"Magnesium\",\n  Al: \"Aluminium\",\n  Si: \"Silicon\",\n  P: \"Phosphorus\",\n  S: \"Sulfur\",\n  Cl: \"Chlorine\",\n  Ar: \"Argon\",\n  K: \"Potassium\",\n  Ca: \"Calcium\",\n  Sc: \"Scandium\",\n  Ti: \"Titanium\",\n  V: \"Vanadium\",\n  Cr: \"Chromium\",\n  Mn: \"Manganese\",\n  Fe: \"Iron\",\n  Co: \"Cobalt\",\n  Ni: \"Nickel\",\n  Cu: \"Copper\",\n  Zn: \"Zinc\",\n  Ga: \"Gallium\",\n  Ge: \"Germanium\",\n  As: \"Arsenic\",\n  Se: \"Selenium\",\n  Br: \"Bromine\",\n  Kr: \"Krypton\",\n  Rb: \"Rubidium\",\n  Sr: \"Strontium\",\n  Y: \"Yttrium\",\n  Zr: \"Zirconium\",\n  Nb: \"Niobium\",\n  Mo: \"Molybdenum\",\n  Tc: \"Technetium\",\n  Ru: \"Ruthenium\",\n  Rh: \"Rhodium\",\n  Pd: \"Palladium\",\n  Ag: \"Silver\",\n  Cd: \"Cadmium\",\n  In: \"Indium\",\n  Sn: \"Tin\",\n  Sb: \"Antimony\",\n  Te: \"Tellurium\",\n  I: \"Iodine\",\n  Xe: \"Xenon\",\n  Cs: \"Caesium\",\n  Ba: \"Barium\",\n  Hf: \"Hafnium\",\n  Ta: \"Tantalum\",\n  W: \"Tungsten\",\n  Re: \"Rhenium\",\n  Os: \"Osmium\",\n  Ir: \"Iridium\",\n  Pt: \"Platinum\",\n  Au: \"Gold\",\n  Hg: \"Mercury\",\n  Tl: \"Thallium\",\n  Pb: \"Lead\",\n  Bi: \"Bismuth\",\n  Po: \"Polonium\",\n  At: \"Astatine\",\n  Rn: \"Radon\",\n  Fr: \"Francium\",\n  Ra: \"Radium\",\n  Rf: \"Rutherfordium\",\n  Db: \"Dubnium\",\n  Sg: \"Seaborgium\",\n  Bh: \"Bohrium\",\n  Hs: \"Hassium\",\n  Mt: \"Meitnerium\",\n  Ds: \"Darmstadtium\",\n  Rg: \"Roentgenium\",\n  Cn: \"Copernicium\",\n  Uut: \"Ununtrium\",\n  Fl: \"Flerovium\",\n  Uup: \"Ununpentium\",\n  Lv: \"Livermorium\",\n  Uus: \"Ununseptium\",\n  Uuo: \"Ununoctium\",\n  La: \"Lanthanum\",\n  Ce: \"Cerium\",\n  Pr: \"Praseodymium\",\n  Nd: \"Neodymium\",\n  Pm: \"Promethium\",\n  Sm: \"Samarium\",\n  Eu: \"Europium\",\n  Gd: \"Gadolinium\",\n  Tb: \"Terbium\",\n  Dy: \"Dysprosium\",\n  Ho: \"Holmium\",\n  Er: \"Erbium\",\n  Tm: \"Thulium\",\n  Yb: \"Ytterbium\",\n  Lu: \"Lutetium\",\n  Ac: \"Actinium\",\n  Th: \"Thorium\",\n  Pa: \"Protactinium\",\n  U: \"Uranium\",\n  Np: \"Neptunium\",\n  Pu: \"Plutonium\",\n  Am: \"Americium\",\n  Cm: \"Curium\",\n  Bk: \"Berkelium\",\n  Cf: \"Californium\",\n  Es: \"Einsteinium\",\n  Fm: \"Fermium\",\n  Md: \"Mendelevium\",\n  No: \"Nobelium\",\n  Lr: \"Lawrencium\"\n};\nmodule.exports = {\n  ELEMENTS\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./data.js\n");

/***/ }),

/***/ "./elementalWords.js":
/*!***************************!*\
  !*** ./elementalWords.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"elementalFormsTop2\": () => (/* binding */ elementalFormsTop2)\n/* harmony export */ });\nconst {\n  ELEMENTS\n} = __webpack_require__(/*! ./data */ \"./data.js\");\n\nlet word = \"cocopuffs\";\n\nfunction elementalForms(word) {\n  if (word.length === 0) {\n    return [];\n  }\n\n  const keyMap = Object.entries(ELEMENTS).map(([key, value]) => key.toLowerCase()); //   if (keyMap.includes(word.toLowerCase())) {\n  //     return [`${ELEMENTS[word[0].toUpperCase() + word.substring(1)]} (${word})`];\n  //   }\n  // split word up into array [b, be, bea, e, ea, eac, a, ac, ach]\n\n  const splitWord = word.toLowerCase().split(\"\");\n  let wordParts = [];\n\n  for (let i = 0; i < splitWord.length; i++) {\n    wordParts.push(splitWord[i]);\n\n    if (i === splitWord.length - 1) {\n      break;\n    }\n\n    wordParts.push(splitWord[i] + splitWord[i + 1]);\n\n    if (i === splitWord.length - 2) {\n      continue;\n    }\n\n    wordParts.push(splitWord[i] + splitWord[i + 1] + splitWord[i + 2]);\n  } //   console.log(keyMap, splitWord);\n  //   console.log(wordParts);\n  // now find the ELEMENTS that fit in our word\n\n\n  const symbols = wordParts.filter(symbol => keyMap.includes(symbol)); //   console.log(\"symbols:\", symbols);\n  // put them into object of sub-arrays of what they start with\n\n  alphaArray = {};\n\n  for (charIndex in splitWord) {\n    startsWithArray = [];\n    symbols.forEach(function (symbol) {\n      if (symbol.startsWith(splitWord[charIndex])) {\n        if (charIndex < splitWord.length - 2) {\n          startsWithArray.push(symbol);\n        } else if (charIndex < splitWord.length - 1) {\n          if (symbol.length < 3) {\n            startsWithArray.push(symbol);\n          }\n        } else if (symbol.length === 1) {\n          startsWithArray.push(symbol);\n        } // deal with the two and then deal with the one\n        //\n\n      }\n    });\n    alphaArray[charIndex] = startsWithArray;\n  }\n\n  console.log(alphaArray); //   now create recursion using a while and a random int :)\n\n  let sym = \"\";\n  let concatWord = [];\n  let allConcatWords = [];\n  let totalSymLength = 0;\n  let count = 0;\n\n  while (count < 1000000) {\n    if (typeof sym == \"undefined\") {\n      totalSymLength = 0;\n      concatWord = [];\n      sym = \"\";\n      count++;\n    }\n\n    totalSymLength += sym.length;\n    sym = alphaArray[totalSymLength][Math.floor(Math.random() * alphaArray[totalSymLength].length)];\n    concatWord.push(sym);\n\n    if (concatWord.join(\"\").toString() === word.toLowerCase()) {\n      existCheck = allConcatWords.map(array => hasSubArray(array, concatWord));\n\n      if (existCheck.includes(true) === false) {\n        // console.log(\"iteration no:\", count, concatWord);\n        allConcatWords.push(concatWord);\n      }\n\n      totalSymLength = 0;\n      concatWord = [];\n      sym = \"\";\n    } else if (concatWord.join(\"\").length == word.length) {\n      totalSymLength = 0;\n      concatWord = [];\n      sym = \"\";\n      count++;\n    }\n\n    count++;\n  }\n\n  console.log(allConcatWords); //   .includes did not work so this was the painful get around helper function\n\n  function hasSubArray(master, sub) {\n    return sub.every((i => v => i = master.indexOf(v, i) + 1)(0));\n  } //   putting result into desired format\n\n\n  let result = [];\n\n  for (subArray of allConcatWords) {\n    subArray = subArray.map(item => item[0].toUpperCase() + item.substring(1));\n    subArray = subArray.map(item => `${ELEMENTS[item]} (${item})`);\n    result.push(subArray);\n  }\n\n  return result;\n} // console.log(elementalForms(word));\n\n/*TOP SOLUTIONS*/\n\n\nconst elementalFormsTop1 = (word, acc = [], result = []) => {\n  for (let i = 1; i <= 3; i += 1) {\n    const el = word.slice(0, i).toLowerCase().replace(/^./, ch => ch.toUpperCase());\n    if (!ELEMENTS[el]) continue;\n    const line = [...acc, `${ELEMENTS[el]} (${el})`];\n    i === word.length && result.push(line);\n    elementalForms(word.slice(i), line, result);\n  }\n\n  console.log(\"hi\");\n  return result;\n};\n\nString.prototype.capitalize = function () {\n  return this.charAt(0).toUpperCase() + this.slice(1).toLowerCase();\n};\n\nfunction* findForms(ws, form = []) {\n  if (ws.length == 0) yield form.map(e => ELEMENTS[e] + \" (\" + e + \")\"); //   console.log(ws, ws.length == 0);\n\n  for (var i = 3; i > 0; --i) {\n    if (ws.length >= i) {\n      var el = ws.slice(0, i).capitalize();\n\n      if (el in ELEMENTS) {\n        form.push(el);\n        yield* findForms(ws.slice(i), form);\n        form.pop();\n      }\n    }\n  }\n}\n\nfunction elementalFormsTop2(word) {\n  return word.length == 0 ? [] : Array.from(findForms(word));\n} // console.log(elementalFormsTop2(\"snack\"));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./elementalWords.js\n");

/***/ }),

/***/ "./pages/interactive.js":
/*!******************************!*\
  !*** ./pages/interactive.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _elementalWords__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../elementalWords */ \"./elementalWords.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__);\nvar _jsxFileName = \"/Users/PerrettJ4/Desktop/Code/School of Code/Week09/w9d4_gatsby-next-research-task-nasra-lizard/experimentation/pages/interactive.js\";\n\n\n\n\n\nfunction InteractivePage() {\n  const {\n    0: count,\n    1: setCount\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n  const {\n    0: text,\n    1: setText\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"word\");\n\n  function increment() {\n    setCount(count + 1);\n  }\n\n  function handleEnter(e) {\n    setText(e.target.value);\n    console.log(e.target.value);\n  }\n\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, {\n    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"h1\", {\n      children: \"Counter Fun\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"h2\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"button\", {\n      onClick: increment,\n      children: \"+1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"input\", {\n      type: \"text\",\n      placeholder: \"anything\",\n      onBlur: e => {\n        console.log(e);\n        handleEnter(e);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"p\", {\n      children: (0,_elementalWords__WEBPACK_IMPORTED_MODULE_1__.elementalFormsTop2)(text)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InteractivePage);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9pbnRlcmFjdGl2ZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQTs7OztBQUVBLFNBQVNFLGVBQVQsR0FBMkI7QUFDekIsUUFBTTtBQUFBLE9BQUNDLEtBQUQ7QUFBQSxPQUFRQztBQUFSLE1BQW9CSiwrQ0FBUSxDQUFDLENBQUQsQ0FBbEM7QUFDQSxRQUFNO0FBQUEsT0FBQ0ssSUFBRDtBQUFBLE9BQU9DO0FBQVAsTUFBa0JOLCtDQUFRLENBQUMsTUFBRCxDQUFoQzs7QUFFQSxXQUFTTyxTQUFULEdBQXFCO0FBQ25CSCxJQUFBQSxRQUFRLENBQUNELEtBQUssR0FBRyxDQUFULENBQVI7QUFDRDs7QUFFRCxXQUFTSyxXQUFULENBQXFCQyxDQUFyQixFQUF3QjtBQUN0QkgsSUFBQUEsT0FBTyxDQUFDRyxDQUFDLENBQUNDLE1BQUYsQ0FBU0MsS0FBVixDQUFQO0FBQ0FDLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSixDQUFDLENBQUNDLE1BQUYsQ0FBU0MsS0FBckI7QUFDRDs7QUFDRCxzQkFDRTtBQUFBLDRCQUNFO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLFlBREYsZUFFRTtBQUFBLGdCQUFLUjtBQUFMO0FBQUE7QUFBQTtBQUFBO0FBQUEsWUFGRixlQUdFO0FBQVEsYUFBTyxFQUFFSSxTQUFqQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxZQUhGLGVBSUU7QUFDRSxVQUFJLEVBQUMsTUFEUDtBQUVFLGlCQUFXLEVBQUMsVUFGZDtBQUdFLFlBQU0sRUFBR0UsQ0FBRCxJQUFPO0FBQ2JHLFFBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSixDQUFaO0FBQ0FELFFBQUFBLFdBQVcsQ0FBQ0MsQ0FBRCxDQUFYO0FBQ0Q7QUFOSDtBQUFBO0FBQUE7QUFBQTtBQUFBLFlBSkYsZUFZRTtBQUFBLGdCQUFJUixtRUFBa0IsQ0FBQ0ksSUFBRDtBQUF0QjtBQUFBO0FBQUE7QUFBQTtBQUFBLFlBWkY7QUFBQSxrQkFERjtBQWdCRDs7QUFFRCxpRUFBZUgsZUFBZiIsInNvdXJjZXMiOlsid2VicGFjazovL2V4cGVyaW1lbnRhdGlvbi8uL3BhZ2VzL2ludGVyYWN0aXZlLmpzPzE4NTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGVsZW1lbnRhbEZvcm1zVG9wMiB9IGZyb20gXCIuLi9lbGVtZW50YWxXb3Jkc1wiO1xuXG5mdW5jdGlvbiBJbnRlcmFjdGl2ZVBhZ2UoKSB7XG4gIGNvbnN0IFtjb3VudCwgc2V0Q291bnRdID0gdXNlU3RhdGUoMCk7XG4gIGNvbnN0IFt0ZXh0LCBzZXRUZXh0XSA9IHVzZVN0YXRlKFwid29yZFwiKTtcblxuICBmdW5jdGlvbiBpbmNyZW1lbnQoKSB7XG4gICAgc2V0Q291bnQoY291bnQgKyAxKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZUVudGVyKGUpIHtcbiAgICBzZXRUZXh0KGUudGFyZ2V0LnZhbHVlKTtcbiAgICBjb25zb2xlLmxvZyhlLnRhcmdldC52YWx1ZSk7XG4gIH1cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPGgxPkNvdW50ZXIgRnVuPC9oMT5cbiAgICAgIDxoMj57Y291bnR9PC9oMj5cbiAgICAgIDxidXR0b24gb25DbGljaz17aW5jcmVtZW50fT4rMTwvYnV0dG9uPlxuICAgICAgPGlucHV0XG4gICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgcGxhY2Vob2xkZXI9XCJhbnl0aGluZ1wiXG4gICAgICAgIG9uQmx1cj17KGUpID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhlKTtcbiAgICAgICAgICBoYW5kbGVFbnRlcihlKTtcbiAgICAgICAgfX1cbiAgICAgID48L2lucHV0PlxuICAgICAgPHA+e2VsZW1lbnRhbEZvcm1zVG9wMih0ZXh0KX08L3A+XG4gICAgPC8+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IEludGVyYWN0aXZlUGFnZTtcbiJdLCJuYW1lcyI6WyJ1c2VTdGF0ZSIsImVsZW1lbnRhbEZvcm1zVG9wMiIsIkludGVyYWN0aXZlUGFnZSIsImNvdW50Iiwic2V0Q291bnQiLCJ0ZXh0Iiwic2V0VGV4dCIsImluY3JlbWVudCIsImhhbmRsZUVudGVyIiwiZSIsInRhcmdldCIsInZhbHVlIiwiY29uc29sZSIsImxvZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/interactive.js\n");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/interactive.js"));
module.exports = __webpack_exports__;

})();